# oneFourSeven/urls.py
from django.urls import path, include
from rest_framework import routers # Import DRF router

# Import views from the current application (.)
from .views import (
    # Generic List Views
    EventList,
    PlayerList,
    RankingList,
    # Authentication Views
    login_view, # Renamed from login
    logout_view, # Renamed from logout
    # Function-based Detail/Specific Views
    player_by_id_view,
    event_detail_view,
    matches_of_an_event_view,
    match_detail_view, # Uses api_match_id
    h2h_view,          # Head-to-head view
    tour_details_view, # External API proxy for event details
    # Debug Views
    debug_status_view,
    tours_by_status_view,
    calendar_tabs_view,
    ranking_tabs_view,
    ranking_types_view,
    # ViewSet for Users
    UserViewSet,
    round_format,
    # Prize Money Views
    prize_money_view,
    round_prizes_view
)

# --- DRF Router Setup ---
# Routers provide an easy way of automatically determining the URL conf for ViewSets.
router = routers.DefaultRouter()
# Register the UserViewSet with the router under the 'users' prefix
# This will generate URLs like /users/, /users/{pk}/ etc.
router.register(r'users', UserViewSet, basename='user') # Use basename for clarity if needed
# --- End Router Setup ---

# Define the URL patterns for the application
urlpatterns = [
    # --- Router URLs ---
    # Include the URLs automatically generated by the router (for UserViewSet)
    path('', include(router.urls)), # Example: /api/users/, /api/users/1/

    # --- Authentication URLs ---
    path('auth/login/', login_view, name='token_obtain_pair'), # Use standard JWT name? Or custom 'login'
    path('auth/logout/', logout_view, name='logout'),
    # Add refresh token URL if using SimpleJWT's refresh mechanism client-side
    # path('auth/token/refresh/', TokenRefreshView.as_view(), name='token_refresh'),

    # --- Player URLs ---
    # List players filtered by sex ('M' or 'F')
    path('players/<str:sex>/', PlayerList.as_view(), name='player-list-by-sex'),
    # Get details for a specific player by their ID
    path('players/detail/<int:player_id>/', player_by_id_view, name='player-detail'),

    # --- Event & Match URLs ---
    # List all events
    path('events/', EventList.as_view(), name='event-list'),
    # Get details for a specific event by its ID
    path('events/<int:event_id>/', event_detail_view, name='event-detail'),
    # List all matches for a specific event
    path('events/<int:event_id>/matches/', matches_of_an_event_view, name='event-matches'),
    # Get details for a specific match by its API ID
    path('matches/<int:api_match_id>/', match_detail_view, name='match-detail'),
    
    # --- Prize Money URLs ---
    # Get tournament prize money breakdown
    path('prize-money/<int:event_id>/', prize_money_view, name='prize-money'),
    # Get round-specific prize amounts
    path('round-prizes/<int:event_id>/', round_prizes_view, name='round-prizes'),

    # --- Ranking URLs ---
    # List all ranking entries
    path('rankings/', RankingList.as_view(), name='ranking-list'),
    # Ranking tabs for different categories (legacy)
    path('rankings/<str:tab_type>/', ranking_tabs_view, name='ranking-tabs'),
    # New ranking types endpoint for all ranking types
    path('ranking-types/<str:ranking_type>/', ranking_types_view, name='ranking-types'),
    path('ranking-types/', ranking_types_view, name='ranking-types-default'),

    # --- Head-to-Head URL ---
    # Get H2H stats between two players
    path('h2h/<int:player1_id>/<int:player2_id>/', h2h_view, name='head-to-head'),
    
    # --- Match Format URL ---
    # Get match format details by round ID and season
    path('match-format/<int:round_id>/<int:season_int>/', round_format, name='match-format'),

    # --- External API Proxy URL (Optional) ---
    # Proxy for fetching detailed event info (t=3) from snooker.org
    path('external/event-details/<int:event_id>/', tour_details_view, name='external-event-details'),
    
    # --- Tournament Status URLs ---
    # Get tournaments organized by status (active/upcoming/recent/previous)
    path('tours/by-status/', tours_by_status_view, name='tours-by-status'),
    # Calendar tab endpoints for main tours vs others
    path('calendar/<str:tab_type>/', calendar_tabs_view, name='calendar-tabs'),
    path('calendar/', calendar_tabs_view, {'tab_type': 'main'}, name='calendar-main'),
    
    # --- Debug URL ---
    # Debug endpoint for checking system status
    path('debug/status/', debug_status_view, name='debug-status'),
]

# You might want to namespace these URLs if this app is included in a larger project's urls.py
# Example:
# app_name = 'oneFourSeven'
# urlpatterns = [...]
# In project urls.py: path('api/snoooker/', include('oneFourSeven.urls')),
