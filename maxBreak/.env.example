# MaxBreak Snooker App - Backend Environment Variables
# Copy this file to .env and fill in the appropriate values for your environment

# ===========================================
# DJANGO CORE SETTINGS
# ===========================================

# Django Secret Key (REQUIRED for production)
# Generate a new one using: python -c 'from django.core.management.utils import get_random_secret_key; print(get_random_secret_key())'
SECRET_KEY=your-secret-key-here

# Debug mode (True for development, False for production)
DEBUG=True

# Allowed hosts (comma-separated list of domains/IPs)
# For development: localhost,127.0.0.1,10.0.2.2
# For production: your-domain.com,your-ip-address
ALLOWED_HOSTS=localhost,127.0.0.1,10.0.2.2

# Django settings module to use
DJANGO_SETTINGS_MODULE=maxBreak.settings

# ===========================================
# DATABASE CONFIGURATION
# ===========================================

# Database URL (for PostgreSQL in production)
# Format: postgresql://username:password@host:port/database_name
# Leave empty to use SQLite (default for development)
DATABASE_URL=

# SQLite Database path (if not using DATABASE_URL)
DB_NAME=db.sqlite3

# ===========================================
# CORS SETTINGS
# ===========================================

# CORS allowed origins (comma-separated list)
# For development: http://localhost:3000,http://10.0.2.2:8081
# For production: your-frontend-domain.com,your-app-scheme://
CORS_ALLOWED_ORIGINS=http://localhost:3000,http://10.0.2.2:8081

# CSRF trusted origins (comma-separated list)
# Should match your frontend domains with https://
CSRF_TRUSTED_ORIGINS=https://your-frontend-domain.com

# ===========================================
# SECURITY SETTINGS
# ===========================================

# Use TLS/SSL (True for production with HTTPS)
USE_TLS=False

# Session cookie age in seconds (default: 86400 = 24 hours)
SESSION_COOKIE_AGE=86400

# CSRF cookie age in seconds (default: 86400 = 24 hours)
CSRF_COOKIE_AGE=86400

# ===========================================
# LOGGING CONFIGURATION
# ===========================================

# Django log level (DEBUG, INFO, WARNING, ERROR, CRITICAL)
DJANGO_LOG_LEVEL=INFO

# Log file path (relative to project root)
LOG_FILE_PATH=django.log

# ===========================================
# EMAIL SETTINGS (Optional)
# ===========================================

# Email backend (for production notifications)
EMAIL_HOST=smtp.gmail.com
EMAIL_PORT=587
EMAIL_USE_TLS=True
EMAIL_HOST_USER=your-email@gmail.com
EMAIL_HOST_PASSWORD=your-app-password
DEFAULT_FROM_EMAIL=noreply@maxbreak.app

# ===========================================
# THIRD-PARTY API SETTINGS
# ===========================================

# Snooker.org API configuration
SNOOKER_ORG_API_URL=http://api.snooker.org
SNOOKER_ORG_API_KEY=your-snooker-org-api-key

# Rate limiting for external API calls (requests per minute)
API_RATE_LIMIT=60

# ===========================================
# CACHING SETTINGS
# ===========================================

# Redis URL (for production caching)
# Format: redis://username:password@host:port/database_number
REDIS_URL=redis://localhost:6379/0

# Cache timeout in seconds (default: 300 = 5 minutes)
CACHE_TIMEOUT=300

# ===========================================
# TASK QUEUE SETTINGS (Optional)
# ===========================================

# Celery broker URL (if using Celery for background tasks)
CELERY_BROKER_URL=redis://localhost:6379/1

# Celery result backend
CELERY_RESULT_BACKEND=redis://localhost:6379/1

# ===========================================
# MONITORING & ANALYTICS (Optional)
# ===========================================

# Sentry DSN for error tracking
SENTRY_DSN=https://your-sentry-dsn@sentry.io/project-id

# Google Analytics property ID
GA_PROPERTY_ID=GA-XXXXXXXXX

# ===========================================
# FILE STORAGE SETTINGS
# ===========================================

# Media files URL prefix
MEDIA_URL=/media/

# Static files URL prefix
STATIC_URL=/static/

# Static files root directory (for production)
STATIC_ROOT=/app/staticfiles

# Media files root directory
MEDIA_ROOT=/app/media

# ===========================================
# DEVELOPMENT SETTINGS
# ===========================================

# Enable Django debug toolbar (True for development)
ENABLE_DEBUG_TOOLBAR=False

# Enable Django extensions (True for development)
ENABLE_DJANGO_EXTENSIONS=False

# ===========================================
# DEPLOYMENT SETTINGS
# ===========================================

# Application port (default: 8000)
PORT=8000

# Number of worker processes (for Gunicorn)
WEB_CONCURRENCY=2

# Worker timeout in seconds
WORKER_TIMEOUT=30

# Maximum requests per worker (0 = unlimited)
MAX_REQUESTS=1000

# Maximum jitter for requests per worker
MAX_REQUESTS_JITTER=100

# ===========================================
# BACKUP SETTINGS (Optional)
# ===========================================

# Database backup directory
BACKUP_DIR=/app/backups

# Backup retention days
BACKUP_RETENTION_DAYS=30

# S3 bucket for backups (if using AWS S3)
AWS_STORAGE_BUCKET_NAME=your-backup-bucket
AWS_ACCESS_KEY_ID=your-aws-access-key
AWS_SECRET_ACCESS_KEY=your-aws-secret-key
AWS_S3_REGION_NAME=us-east-1

# ===========================================
# SCRAPING SETTINGS
# ===========================================

# User agent for web scraping
SCRAPER_USER_AGENT=MaxBreak Bot 1.0

# Scraping delay in seconds (to be respectful to servers)
SCRAPER_DELAY=1

# Maximum retry attempts for failed requests
SCRAPER_MAX_RETRIES=3

# Scraper timeout in seconds
SCRAPER_TIMEOUT=30

# ===========================================
# JWT SETTINGS
# ===========================================

# JWT access token lifetime in minutes
JWT_ACCESS_TOKEN_LIFETIME=60

# JWT refresh token lifetime in days
JWT_REFRESH_TOKEN_LIFETIME=7

# JWT algorithm
JWT_ALGORITHM=HS256

# Rotate refresh tokens on refresh
JWT_ROTATE_REFRESH_TOKENS=True

# Blacklist tokens after rotation
JWT_BLACKLIST_AFTER_ROTATION=True

# ===========================================
# API THROTTLING
# ===========================================

# Anonymous user rate limit (requests per hour)
ANON_RATE_LIMIT=100

# Authenticated user rate limit (requests per hour)
USER_RATE_LIMIT=1000

# ===========================================
# FEATURE FLAGS
# ===========================================

# Enable live match updates
ENABLE_LIVE_UPDATES=True

# Enable player rankings sync
ENABLE_RANKINGS_SYNC=True

# Enable tournament data sync
ENABLE_TOURNAMENT_SYNC=True

# Enable automated data updates
ENABLE_AUTO_UPDATES=True

# ===========================================
# NOTES
# ===========================================
# 1. Never commit sensitive data like SECRET_KEY, passwords, or API keys to version control
# 2. Use different values for development, staging, and production environments
# 3. Generate strong SECRET_KEY for production using Django's utility
# 4. Ensure all URLs and domains are correctly configured for your deployment
# 5. Review and adjust rate limits based on your application's needs
# 6. Enable SSL/TLS settings only when deploying with HTTPS
# 7. Configure proper database and caching solutions for production
# 8. Set up monitoring and error tracking for production deployments